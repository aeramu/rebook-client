{"version":3,"sources":["src/config/graphql.js","src/components/book/Card/index.js","src/components/common/SearchBar/index.js","src/screens/Home/index.js","src/screens/Book/Summary.js","src/screens/Book/Reference.js","src/screens/Book/index.js","src/screens/Auth/RegistrationForm.js","src/screens/Auth/LoginForm.js","src/screens/Auth/index.js","src/components/common/Header/index.js","src/navigation/index.js","App.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","props","title","author","imageUrl","onPress","TouchableHighlight","underlayColor","View","style","styles","container","Image","resizeMode","image","source","tag","Text","numberOfLines","subtitle","StyleSheet","create","alignItems","justifyContent","borderRadius","overflow","borderWidth","borderColor","width","height","flex","backgroundColor","paddingLeft","paddingRight","paddingBottom","paddingTop","fontSize","fontWeight","color","onChangeText","onSubmit","TextInput","placeholder","text","textInput","Ionicons","name","size","flexDirection","padding","paddingHorizontal","outlineWidth","navigation","numColumns","Math","floor","useWindowDimensions","React","useState","filter","setFilter","useQuery","GET_BOOK_LIST","variables","first","after","loading","data","SearchBar","searchBar","FlatList","key","getBookList","edges","renderItem","item","cardContainer","Card","coverImage","id","navigate","bookId","keyExtractor","margin","marginTop","marginBottom","gql","bookID","page","setPage","totalPage","setTotalPage","GET_BOOK_BY_ID_SUMMARY","useEffect","getBookByID","summary","textContainer","buttonContainer","Button","disabled","GET_BOOK_BY_ID_REFERENCES","containerTitle","reference","description","url","ReferenceCard","window","open","marginLeft","marginVertical","route","GET_BOOK_BY_ID","params","Summary","Reference","flexWrap","marginRight","setEmail","password","setPassword","setUsername","inputView","placeholderTextColor","username","secureTextEntry","email","namalengkap","account","TouchableOpacity","loginBtn","loginText","isLogin","setIsLogin","toggleIsLogin","LoginForm","RegistrationForm","useNavigation","header","login","RootStack","createStackNavigator","RootStackScreen","Navigator","screenOptions","Header","Screen","component","Home","Book","Auth","linking","prefixes","config","NavigationContainer","App"],"mappings":"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","file":"static/js/app.485c07e3.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nexport const client = new ApolloClient({\n  uri: 'https://rebook-server.herokuapp.com/graphql',\n  cache: new InMemoryCache()\n})","import React from 'react'\nimport { TouchableHighlight, View, Text, StyleSheet, Image} from 'react-native'\n\nexport default (props) => {\n    const {title, author, imageUrl, onPress} = props\n\n    return(\n        <TouchableHighlight\n            onPress={onPress}\n            underlayColor=\"white\"\n        >\n            <View style={styles.container}>\n                <Image\n                resizeMode='cover' \n                style={styles.image} \n                source={{ uri: imageUrl }}\n                />\n                <View style={styles.tag}>\n                    <Text style={styles.title} numberOfLines={2}>\n                        {title}\n                    </Text>\n                    <Text style={styles.subtitle} numberOfLines={1}>\n                        {author}\n                    </Text>\n                </View>\n            </View>\n        </TouchableHighlight>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'stretch',\n        justifyContent: 'flex-start', \n        borderRadius: 10,  \n        overflow:'hidden',\n        borderWidth: 0.75,\n        borderColor: 'grey',\n        width: 210,\n        height:420,\n    },\n    image: {\n        height: 320\n    },\n    tag: {\n        flex: 1,\n        backgroundColor: 'white',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        paddingLeft: 10,\n        paddingRight: 10,\n        paddingBottom: 10,\n        paddingTop: 10,\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: 'black',\n    },\n    subtitle:   {\n        fontSize: 15,\n        color: 'grey',\n        justifyContent: 'center',\n    }\n  });\n\n\n","import React from 'react'\nimport { View, StyleSheet, TextInput } from 'react-native'\nimport { Ionicons } from '@expo/vector-icons'\n\nexport default (props) => {\n    const {onChangeText, onSubmit, style} = props\n    return (\n        <View style={[styles.container, style]}>\n            <TextInput\n                placeholder=\"Search...\"\n                onChangeText={(text) => onChangeText(text)}\n                style={styles.textInput}\n            />\n            <Ionicons\n                name='search'\n                onPress={onSubmit}\n                size={15}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        flexDirection:'row',\n        justifyContent:'space-between',\n        borderWidth: 0.5,\n        borderColor:'grey',\n        borderRadius: 20,\n        padding: 10,\n        paddingHorizontal:20,\n    },\n    textInput:{\n        flex:1,\n        outlineWidth:0,\n    }\n})","import React from 'react';\nimport { StyleSheet, Text, View, FlatList, useWindowDimensions } from 'react-native';\nimport { useQuery, gql } from '@apollo/client'\n\nimport Card from '../../components/book/Card'\nimport SearchBar from '../../components/common/SearchBar'\n\nexport default ({navigation}) => {\n  const numColumns = Math.floor(useWindowDimensions().width / 250) \n\n  const [filter, setFilter] = React.useState(\"\")\n\n  const {loading, data} = useQuery(GET_BOOK_LIST,{\n    variables: {\n      first: 50,\n      after: null,\n      filter: filter\n    }\n  })\n\n  const onCardPress = (id) => {\n    navigation.navigate('Book', { bookId:id })\n  }\n \n  return (\n    <View style={styles.container}>\n      <SearchBar\n        style={styles.searchBar}\n        onChangeText={setFilter}\n      />\n      {\n        loading\n        ? <Text>Loading...</Text>\n        : <FlatList\n          key={numColumns}\n          numColumns={numColumns ? numColumns : 1}\n          data={data && data.getBookList.edges}\n          renderItem={({item}) => <View style={styles.cardContainer}>\n            <Card\n              title={item.title}\n              author={item.author}\n              imageUrl={item.coverImage}\n              onPress={() => onCardPress(item.id)}\n            />\n          </View>}\n          keyExtractor={item => item.id }\n        />\n      }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor:\"white\",\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  cardContainer : {\n    margin:20\n  },\n  searchBar: {\n    marginTop:30,\n    marginBottom:20,\n    width:300\n  }\n});\n\nconst GET_BOOK_LIST = gql`\n  query($first: Int!, $after: String, $filter: String){\n    getBookList(first: $first, after: $after, filter: $filter){\n      edges{\n        id\n        title\n        author\n        coverImage\n      }\n      pageInfo{\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`","import React from 'react'\nimport {Button, View, Text, StyleSheet } from 'react-native'\n\nimport {gql, useQuery} from '@apollo/client'\n\nexport default (props) => {\n    const {bookID, style} = props\n    const [page, setPage] = React.useState(1)\n    const [totalPage, setTotalPage] = React.useState(1)\n\n    const {data, loading} = useQuery(GET_BOOK_BY_ID_SUMMARY, {\n        variables:{\n            id: bookID,\n            page: page,\n        }\n    })\n\n    React.useEffect(() => {\n        if (data && (data.getBookByID.summary.totalPage != 0)) {\n            setTotalPage(data.getBookByID.summary.totalPage)\n        }\n    }, [data])\n\n    const onNextPress = () => {\n        setPage(page + 1)\n    }\n\n    const onPreviousPress = () => {\n        setPage(page - 1)\n    }\n\n    return (\n        <View style={style}>\n            <View style={styles.textContainer}>\n            {\n                loading\n                ? <Text>Loading...</Text>\n                : <Text>{data.getBookByID.summary.text}</Text>\n            }\n            </View>\n            <View style={styles.buttonContainer}>\n                <Button\n                    title=\"Previous\"\n                    onPress={onPreviousPress}\n                    disabled={page == 1}\n                />\n                <Text>\n                    {page + '/' + totalPage}\n                </Text>\n                <Button\n                    title=\"Next\"\n                    onPress={onNextPress}\n                    disabled={page >= totalPage}\n                />\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    buttonContainer:{\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        marginTop: 40,\n    },\n    textContainer:{\n        flex:1\n    }\n});\n\nconst GET_BOOK_BY_ID_SUMMARY = gql`\n    query($id: ID!, $page: Int!){\n        getBookByID(id: $id){\n            summary(page: $page){\n                text\n                totalPage\n            }\n        }\n    }\n`","import React from 'react'\nimport { View, Text, FlatList, TouchableHighlight, StyleSheet } from 'react-native'\nimport { gql, useQuery} from '@apollo/client'\n\nexport default (props) => {\n    const {bookID, style} = props\n\n    const {data, loading} = useQuery(GET_BOOK_BY_ID_REFERENCES, {\n        variables:{\n            id: bookID,\n            first: 10,\n        }\n    })\n\n    if (loading) {\n        return (\n            <View style={style}>\n                <Text>Loading...</Text>\n            </View>\n        )\n    }\n\n    return(\n        <View style={style}>\n            <Text style={styles.containerTitle}>Point of View</Text>\n            <FlatList\n                data={data.getBookByID.reference.edges}\n                renderItem={({item}) => \n                    <ReferenceCard\n                        title={item.title}\n                        description={item.description}\n                        url={item.url}\n                    />}\n                keyExtractor={item => item.id }\n            />\n        </View>\n    )\n}\n\nconst ReferenceCard = (props) => {\n    const {title, description, url} = props\n\n    const onPress = () => {\n        window.open(url)\n    }\n\n    return(\n        <TouchableHighlight\n            underlayColor='white'\n            onPress={onPress}\n            style={styles.cardContainer}\n        >\n            <View>\n                <Text style={styles.title}>{title}</Text>\n                <Text style={styles.subtitle}>{description}</Text>\n            </View>\n        </TouchableHighlight>\n    )\n}\n\nconst styles = StyleSheet.create({\n    containerTitle: {\n        color:'grey',\n        fontSize:25,\n        fontWeight:'bold',\n        marginLeft:10,\n    },  \n    title: {\n        fontSize:20,\n        fontWeight:'bold'\n    },\n    subtitle: {\n        color:'grey'  \n    },\n    cardContainer: {\n        marginVertical:10,\n        padding:10,\n        paddingHorizontal:20,\n        borderRadius:20,\n        borderWidth:0.5,\n        borderColor:'grey'\n    }\n})\n\nconst GET_BOOK_BY_ID_REFERENCES = gql`\n    query($id: ID!, $first: Int!){\n        getBookByID(id: $id){\n            reference(first: $first){\n                edges{\n                    id\n                    title\n                    description\n                    url\n                    rating\n                }\n            }\n        }\n      }\n`","import React from 'react'\nimport { View, Text, StyleSheet, Image, useWindowDimensions } from 'react-native'\n\nimport { gql, useQuery} from '@apollo/client'\n\nimport Summary from './Summary'\nimport Reference from './Reference'\n\nexport default (props) => {\n    const { route } = props\n\n    const height = useWindowDimensions().height - 200\n\n    const {data, loading} = useQuery(GET_BOOK_BY_ID, {\n        variables:{\n            id: route.params.bookId\n        }\n    })\n\n    if (loading) {\n        return (\n            <View>\n                <Text>Loading...</Text>\n            </View>\n        )\n    }\n    \n    if (!data) {\n        return (\n            <View>\n                <Text>Failed to load</Text>\n            </View>\n        )\n    }\n\n    return (\n        <View>\n            <View style={styles.container}>\n                <View style={styles.image}>\n                    <Image\n                        style={{ height: height, width: height*2/3}} \n                        source={{ uri: data.getBookByID.coverImage}}\n                        resizeMode='cover'\n                    />\n                </View>\n                <View style={styles.containerTitle}>\n                    <Text style={styles.title}>\n                        {data.getBookByID.title}\n                    </Text>\n                    <Text style={styles.author}>\n                        {data.getBookByID.author}\n                    </Text>\n                    <Summary\n                        bookID = {route.params.bookId} \n                        style={{height: height - 100}}\n                    />\n                    <Reference\n                        bookID = {route.params.bookId}\n                        style = {styles.reference}\n                    />\n                </View>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    containerTitle:{\n        alignItems:'stretch',\n        justifyContent: 'flex-start',   \n        flexDirection: 'column',\n        flex: 1,\n    },\n    container:{\n        alignItems:'stretch',\n        justifyContent: 'flex-start', \n        flexDirection: 'row',\n        padding: 30,\n        backgroundColor:'white',\n        flexWrap:'wrap'\n    },\n    image: {\n        marginBottom:20,\n        marginRight:30,\n    },\n    title: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: 'black',\n    },\n    author: {\n        fontSize: 20,\n        color: 'grey',\n        marginBottom: 10\n    },\n    reference: {\n        marginTop: 30,\n    }\n});\n\nconst GET_BOOK_BY_ID = gql`\n    query($id: ID!){\n        getBookByID(id: $id){\n            id\n            title\n            author\n            coverImage\n        }\n    }\n`","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\n\n\nexport default (props) => {\n    const [email, setEmail] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n    const [username, setUsername] = React.useState(\"\")\n    const [name, setName] = React.useState(\"\")\n    const {onPress} = props\n\n    return(\n        <View style={styles.container}>\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Username...\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={(username) => setUsername(username)}\n                />\n            </View>\n   \n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Email...\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={(email) => setEmail(email)}\n                />\n            </View>\n\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Password...\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={(password) => setPassword(password)}\n                />\n            </View>\n\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Nama Lengkap...\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={(namalengkap) => setPassword(password)}\n                />\n            </View>\n\n            <Text onPress={onPress} style={styles.account}>\n                Already have an account?\n            </Text>\n\n            <TouchableOpacity style={styles.loginBtn}>\n                <Text style={styles.loginText}>Register</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderWidth: 0.5,\n        borderColor: \"grey\",\n        padding: 40,\n        margin: 20,\n        borderRadius: 5,\n    },\n\n    inputView: {\n        backgroundColor: \"white\",\n        borderColor: \"skyblue\",\n        borderRadius: 5,\n        borderWidth: 2,\n        height: 45,\n        marginBottom: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    \n    TextInput: {\n        height: 50,\n        flex: 1,\n        padding: 25,\n        marginLeft: 20,\n        outlineWidth: 0,\n    },\n\n    loginBtn: {\n        borderRadius: 5,\n        width: \"70%\",\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 40,\n        backgroundColor: \"skyblue\",\n    },\n\n    account: {\n        fontSize: 13,\n        color: \"skyblue\",\n        fontWeight: \"bold\",\n    },\n})","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\n\n\nexport default (props) => {\n    const {onPress} = props\n    const [email, setEmail] = React.useState(\"\")\n    const [password, setPassword] = React.useState(\"\")\n    return(\n        <View style={styles.container}>\n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Email...\"\n                    placeholderTextColor=\"#003f5c\"\n                    onChangeText={(email) => setEmail(email)}\n                />\n            </View>\n    \n            <View style={styles.inputView}>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Password...\"\n                    placeholderTextColor=\"#003f5c\"\n                    secureTextEntry={true}\n                    onChangeText={(password) => setPassword(password)}\n                />\n            </View>\n\n            <Text onPress={onPress} style={styles.account}>\n                Don't have an account?\n            </Text>\n\n            <TouchableOpacity style={styles.loginBtn}>\n                <Text style={styles.loginText}>Login</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderWidth: 0.5,\n        borderColor: \"grey\",\n        padding: 40,\n        margin: 20,\n        borderRadius: 5,\n    },\n\n    inputView: {\n        backgroundColor: \"white\",\n        borderColor: \"skyblue\",\n        borderRadius: 5,\n        borderWidth: 2,\n        height: 45,\n        marginBottom: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    \n      TextInput: {\n        height: 50,\n        flex: 1,\n        padding: 25,\n        marginLeft: 20,\n        outlineWidth: 0,\n    },\n\n      loginBtn: {\n        borderRadius: 5,\n        width: \"70%\",\n        height: 50,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginTop: 40,\n        backgroundColor: \"skyblue\",\n    },\n\n    account: {\n        fontSize: 13,\n        color: \"skyblue\",\n        fontWeight: \"bold\",\n    },\n})","import React from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport RegistrationForm from '../Auth/RegistrationForm'\nimport LoginForm from '../Auth/LoginForm'\n\nexport default () => {\n    const [isLogin, setIsLogin] = React.useState(true)\n\n    const toggleIsLogin = () => {\n        setIsLogin(!isLogin)\n    }\n\n    return(\n        <View style={styles.container}>\n            { isLogin\n                ? <LoginForm onPress={toggleIsLogin}/>\n                : <RegistrationForm onPress={toggleIsLogin}/>\n            }\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        justifyContent:'center',\n        alignItems:'center',\n    },\n})","import React from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\n\nexport default () => {\n    const navigation = useNavigation()\n    const onLoginPress = () => {\n        navigation.navigate('Auth')\n    }\n    const onHeaderPress = () => {\n        navigation.navigate('Home')\n    }\n    return(\n        <View style={styles.header}>\n            <View>\n                <Text style={styles.title} onPress={onHeaderPress}>BiblioGig</Text>\n                <Text style={styles.subtitle}>by Coder x ISH TIBEN</Text>\n            </View>\n            <Text style={styles.login} onPress={onLoginPress}>Login</Text>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    header: {\n        height: 100,\n        backgroundColor:\"blue\",\n        flexDirection: 'row',\n        justifyContent:'space-between',\n        alignItems: 'center',\n    },\n    title: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        color: 'white',\n        justifyContent: 'center',\n        paddingTop: 20,\n        paddingBottom: 10,\n        paddingLeft: 60,\n    },\n    subtitle:   {\n        fontSize: 10,\n        color: 'white',\n        justifyContent: 'center',\n        paddingBottom: 10,\n        paddingLeft: 60,\n    },\n    login:   {\n        fontSize: 20,\n        color: 'white',\n        paddingBottom: 10,\n        paddingRight: 60,\n    }\n  });\n\n\n","import React from 'react'\n\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport Home from '../screens/Home'\nimport Book from '../screens/Book'\nimport Auth from '../screens/Auth'\nimport Header from '../components/common/Header'\nconst RootStack = createStackNavigator()\nconst RootStackScreen = () => {\n    return (\n        <RootStack.Navigator screenOptions={{ \n            header: () => {\n                return <Header/>\n            } \n        }}>\n            <RootStack.Screen name='Home' component={Home}/>\n            <RootStack.Screen name='Book' component={Book}/>\n            <RootStack.Screen name='Auth' component={Auth}/>\n        </RootStack.Navigator>\n    )\n}\n\nconst linking = {\n    prefixes: [\n        'https://aeramu.github.io/rebook-client',\n        'http://localhost:1900'\n    ],\n    config: {\n        Home: '',\n        Book: 'book/:bookId'\n    },\n};\n\nexport default () => {\n    return (\n        <NavigationContainer linking={linking}>\n            <RootStackScreen/>\n        </NavigationContainer>\n    )\n}","import React from 'react';\nimport { ApolloProvider } from '@apollo/client';\n\nimport { client } from './src/config/graphql'\nimport Navigator from './src/navigation'\n\nexport default function App() {\n  return (\n    <ApolloProvider client={client}>\n      <Navigator/>\n    </ApolloProvider>\n  )\n}\n"],"sourceRoot":""}